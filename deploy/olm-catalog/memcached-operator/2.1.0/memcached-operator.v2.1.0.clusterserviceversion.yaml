apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "cache.test.com/v1alpha1",
          "kind": "Memcached",
          "metadata": {
            "name": "example-memcached-beta"
          },
          "spec": {
            "size": 3,
            "version": "1.4.36-alpine"
          }
        }
      ]
    capabilities: Basic Install
    categories: Developer Tools
    certified: "false"
    containerImage: quay.io/danielxlee/memcached-operator-img
    createdAt: "2020-03-31T11:05:16Z"
    description: Main enterprise application providing business critical features
      with high availability and no manual intervention.
    olm.skipRange: '>=1.0.0 <2.0.0'
    repository: https://github.com/DanielXLee/memcached-operator
    support: DXL
  name: memcached-operator.v2.1.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Represents a cluster of Memcached apps
      displayName: Memcached App
      kind: Memcached
      name: memcacheds.cache.test.com
      resources:
      - kind: Deployment
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      specDescriptors:
      - description: The desired number of member Pods for the deployment
        displayName: Pod Count
        path: size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
        - urn:alm:descriptor:io.kubernetes:custom
      - description: Memcached version
        displayName: Version
        path: version
      version: v1alpha1
  description: Main enterprise application providing business critical features with
    high availability and no manual intervention.
  displayName: Memcached Application
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      deployments:
      - name: memcached-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: memcached-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: memcached-operator
            spec:
              containers:
              - command:
                - memcached-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: memcached-operator
                image: quay.io/danielxlee/memcached-operator-img:2.1.0
                imagePullPolicy: Always
                name: memcached-operator
                resources: {}
              serviceAccountName: memcached-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - memcached-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          verbs:
          - get
        - apiGroups:
          - cache.test.com
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: memcached-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - memcached
  - app
  links:
  - name: Memcached Operator
    url: https://github.com/DanielXLee/memcached-operator
  maintainers:
  - email: lixin8611@gmail.com
    name: DanielXLee
  maturity: alpha
  provider:
    name: DanielXLee
    url: www.example.com
  replaces: memcached-operator.v2.0.0
  version: 2.1.0
